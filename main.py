import telebot
import requests
import random
from telebot import types

bot = telebot.TeleBot("—Ç—Ç—Ç—Ç")


@bot.message_handler(commands=['help'])
def display_help(message):
    help_text = """
/start - –Ω–∞—á–∞–ª–æ
/help - —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–æ —Å–ø—Ä–∞–≤–∫–æ–π 
/info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –±–æ—Ç–µ

/exchange_rate - –∫—É—Ä—Å –≤–∞–ª—é—Ç—ã 
/weather <–≥–æ—Ä–æ–¥> - –ø–æ–≥–æ–¥–∞ –≤ –≤—ã–±—Ä–∞–Ω–Ω–æ–º –≥–æ—Ä–æ–¥–µ
/joke - –∞–Ω–µ–∫–¥–æ—Ç 
/cube - –±—Ä–æ—Å–∏—Ç—å –∏–≥—Ä–∞–ª—å–Ω—É—é –∫–æ—Å—Ç—å
/ip - <ip –∞–¥—Ä–µ—Å>- —Å—Ç—Ä–∞–Ω–∞, –æ–±–ª–∞—Å—Ç—å –∏ –≥–æ—Ä–æ–¥ –ø–æ ip 
/guess_number - –∏–≥—Ä–∞ ¬´–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ¬ª
/compliment - –∫–æ–ø–ª–∏–º–µ–Ω—Ç –¥–ª—è –≤–∞—Å!)
"""
    bot.reply_to(message, help_text)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def start(message):
    bot.reply_to(message, "–ü—Ä–∏–≤–µ—Ç! –Ø –†–∞—è–Ω–∞! üë©üèª –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /help –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∫–∏.")
    photo = open('image.jpg', 'rb')  # –û—Ç–∫—Ä—ã–≤–∞–µ–º —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—é –≤ –±–∏–Ω–∞—Ä–Ω–æ–º —Ä–µ–∂–∏–º–µ
    bot.send_photo(message.chat.id, photo)  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –ø–æ –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä—É —á–∞—Ç–∞
    photo.close()  # –ó–∞–∫—Ä—ã–≤–∞–µ–º —Ñ–∞–π–ª


@bot.message_handler(commands=['info'])
def info(message):
    first_mess = f"<b>{message.from_user.first_name} {message.from_user.last_name}</b>, –ø—Ä–∏–≤–µ—Ç!\n–•–æ—á–µ—à—å —Ä–∞—Å—Å–∫–∞–∂—É –Ω–µ–º–Ω–æ–≥–æ –æ —Å–µ–±–µ?"
    markup = types.InlineKeyboardMarkup()
    button_yes = types.InlineKeyboardButton(text='–î–∞', callback_data='yes')
    markup.add(button_yes)
    bot.send_message(message.chat.id, first_mess, parse_mode='html', reply_markup=markup)


@bot.callback_query_handler(func=lambda call: True)
def response(function_call):
    if function_call.message:
        if function_call.data == "yes":
            second_mess = "–Ø —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –†–∞—è–Ω–∞. ü•∞ –ü–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Å–æ–∑–¥–∞—Ç–µ–ª–µ–º —Ç—ã –º–æ–∂–µ—à—å, –ø–µ—Ä–µ–π–¥—è –ø–æ —Å—Å—ã–ª–∫–µ!"
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton("–ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å–∞–π—Ç VK", url="https://vk.com/me.rayaaa"))
            bot.send_message(function_call.message.chat.id, second_mess, reply_markup=markup)
            bot.answer_callback_query(function_call.id)


@bot.message_handler(commands=['exchange_rate'])
def exchange_rate(message):
    resp = requests.get("https://www.cbr-xml-daily.ru/daily_json.js")
    data = resp.json()
    usd_rate = data['Valute']['USD']['Value']
    eur_rate = data['Valute']['EUR']['Value']
    exchange_rate_text = f'''
    –ö—É—Ä—Å –≤–∞–ª—é—Ç: 
USD {usd_rate} —Ä—É–±. üíµ
EUR {eur_rate} —Ä—É–±. üí∂
    '''
    bot.reply_to(message, exchange_rate_text)
    bot.reply_to(message, 'üíµ')
    bot.reply_to(message, 'üí∂')


@bot.message_handler(commands=['weather'])
def weather(message):
    try:
        city = message.text.split(' ', 1)[1]  # –ü–æ–ª—É—á–∞–µ–º –≥–æ—Ä–æ–¥ –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        api_key = "3f9cc2afa48f311d34d0780ab04f8d12"
        url = f"http://api.openweathermap.org/data/2.5/weather?q={city}&appid={api_key}&units=metric"
        resp = requests.get(url)
        data = resp.json()
        temperature = data['main']['temp']
        weather_text = f"–ü–æ–≥–æ–¥–∞ –≤ {city}: —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}¬∞C"
        bot.reply_to(message, weather_text)
        bot.reply_to(message, "‚õÖ")
    except IndexError:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥ –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /weather.")
        bot.reply_to(message, "‚õÖ‚õÖ‚õÖ")


@bot.message_handler(commands=['joke'])
def joke(message):
    resp = requests.get("https://api.chucknorris.io/jokes/random")
    data = resp.json()
    joke_text = data['value']
    bot.reply_to(message, joke_text)


@bot.message_handler(commands=['cube'])
def cube(message):
    dice_value = random.randint(1, 6)
    emoji_dice = "üé≤"  # Emoji –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∑–Ω–∞—á–µ–Ω–∏–π –Ω–∞ –∫—É–±–∏–∫–µ
    bot.reply_to(message, f"–ù–∞ –∫—É–±–∏–∫–µ –≤—ã–ø–∞–ª–æ —á–∏—Å–ª–æ {dice_value}.")
    bot.reply_to(message, f"{emoji_dice}")


@bot.message_handler(commands=['ip'])
def get_location_by_ip(message):
    try:
        ip_address = message.text.split(' ', 1)[1]  # –ü–æ–ª—É—á–∞–µ–º IP-–∞–¥—Ä–µ—Å –∏–∑ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        resp = requests.get(f"http://ipinfo.io/{ip_address}/json")
        data = resp.json()
        city = data.get('city', 'Unknown')
        region = data.get('region', 'Unknown')
        country = data.get('country', 'Unknown')
        location_text = f"–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –¥–ª—è IP-–∞–¥—Ä–µ—Å–∞ {ip_address}: {city}, {region}, {country}"
        bot.reply_to(message, location_text)
        bot.reply_to(message, 'üí°üí°üí°')
    except IndexError:
        bot.reply_to(message, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ IP-–∞–¥—Ä–µ—Å –ø–æ—Å–ª–µ –∫–æ–º–∞–Ω–¥—ã /ip. ")
        bot.reply_to(message, "üí°üí°üí°")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –Ω–∞—á–∞–ª–∞ –∏–≥—Ä—ã
@bot.message_handler(commands=['guess_number'])
def start_game(message):
    global secret_number  # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –Ω–æ–≤–æ–µ —Å–ª—É—á–∞–π–Ω–æ–µ —á–∏—Å–ª–æ –¥–ª—è –∫–∞–∂–¥–æ–π –Ω–æ–≤–æ–π –∏–≥—Ä—ã
    secret_number = random.randint(1, 100)
    bot.reply_to(message, "–î–∞–≤–∞–π –ø–æ–∏–≥—Ä–∞–µ–º –≤ '–£–≥–∞–¥–∞–π —á–∏—Å–ª–æ'! –Ø –∑–∞–≥–∞–¥–∞–ª —á–∏—Å–ª–æ –æ—Ç 1 –¥–æ 100. –ü–æ–ø—Ä–æ–±—É–π —É–≥–∞–¥–∞—Ç—å.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —É–≥–∞–¥—ã–≤–∞–Ω–∏—è —á–∏—Å–ª–∞
@bot.message_handler(func=lambda message: message.text.isdigit())
def guess_number(message):
    guess = int(message.text)
    if guess < secret_number:
        bot.reply_to(message, "–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ.")
    elif guess > secret_number:
        bot.reply_to(message, "–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –º–µ–Ω—å—à–µ.")
    else:
        bot.reply_to(message,
                     f"–ü–æ–∑–¥—Ä–∞–≤–ª—è—é, —Ç—ã —É–≥–∞–¥–∞–ª —á–∏—Å–ª–æ {secret_number}! –•–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –µ—â–µ —Ä–∞–∑? ü´¢ –ò—Å–ø–æ–ª—å–∑—É–π –∫–æ–º–∞–Ω–¥—É /guess_number.")


compliments = [
    "–í—ã –ø—Ä–µ–∫—Ä–∞—Å–Ω–æ —Å–ø—Ä–∞–≤–ª—è–µ—Ç–µ—Å—å!",
    "–í–∞—à —Ç—Ä—É–¥ –Ω–µ–æ—Ü–µ–Ω–∏–º!",
    "–í—ã –¥–µ–ª–∞–µ—Ç–µ –º–∏—Ä —è—Ä—á–µ!",
    "–í–∞—à –≤–∫–ª–∞–¥ –≤–∞–∂–µ–Ω!",
    "–ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!",
    "–í–∞—à –æ–ø—Ç–∏–º–∏–∑–º –Ω–µ–≤–µ—Ä–æ—è—Ç–µ–Ω!",
    "–í–∞—Å —Å–ª—É—à–∞—Ç—å - –æ–¥–Ω–æ —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ!",
    "–û—á–µ–Ω—å –∫—Ä—É—Ç–æ! –ü—Ä–æ–¥–æ–ª–∂–∞–π—Ç–µ –≤ —Ç–æ–º –∂–µ –¥—É—Ö–µ!",
    "–í–∞—à–µ —É—Å–µ—Ä–¥–∏–µ –≤–¥–æ—Ö–Ω–æ–≤–ª—è–µ—Ç!",
    "–í–∞—à–∞ —Ä–∞–±–æ—Ç–∞ - –∏—Å–∫—É—Å—Å—Ç–≤–æ!",
]


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–æ–º–ø–ª–∏–º–µ–Ω—Ç–∞ –æ –∫–æ–º–∞–Ω–¥–µ
@bot.message_handler(commands=['compliment'])
def send_compliment(message):
    compliment = random.choice(compliments)
    bot.reply_to(message, compliment)


phrases = [
    "–ö–ª–∞—Å—Å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!",
    "–ó–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è!",
    "–ü—Ä–µ–∫—Ä–∞—Å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ!",
    "–í–ø–µ—á–∞—Ç–ª—è—é—â–∞—è –∫–∞—Ä—Ç–∏–Ω–∫–∞!",
    "–°–ø–∞—Å–∏–±–æ –∑–∞ —Ñ–æ—Ç–æ!"
]


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
@bot.message_handler(content_types=['photo'])
def handle_image(message):
    random_phrase = random.choice(phrases)
    bot.reply_to(message, random_phrase)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ —Ñ–∞–π–ª
@bot.message_handler(commands=['save_data'])
def save_data(message):
    user_id = message.from_user.id
    user_data = "Some data to save"

    # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –¥–∞–Ω–Ω—ã–µ –≤ —Ç–µ–∫—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª
    with open(f"{user_id}_data.txt", "w") as file:
        file.write(user_data)

    bot.reply_to(message, "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã.")


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —á—Ç–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞
@bot.message_handler(commands=['read_data'])
def read_data(message):
    user_id = message.from_user.id

    # –ß–∏—Ç–∞–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ —Ñ–∞–π–ª–∞
    try:
        with open(f"{user_id}_data.txt", "r") as file:
            data = file.read()
            bot.reply_to(message, f"–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ: {data}")
    except FileNotFoundError:
        bot.reply_to(message, "–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")


bot.polling()
